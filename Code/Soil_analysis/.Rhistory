top_level = "Phylum",
nested_level = "Class",
nested_merged_label = "<tax>",
legend_title = "Phylum and Class",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black')) +
guides(fill=guide_legend(ncol=2))
plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Class",
nested_merged_label = "<tax>",
legend_title = "Phylum and Class",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
guides(fill=guide_legend(ncol=2))
plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Class",
nested_merged_label = "<tax>",
legend_title = "Phylum and Class",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
axis.ticks.y = "black") +
plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Class",
nested_merged_label = "<tax>",
legend_title = "Phylum and Class",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = "black") +
guides(fill=guide_legend(ncol=2))
plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Class",
nested_merged_label = "<tax>",
legend_title = "Phylum and Class",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = element_line("black")) +
guides(fill=guide_legend(ncol=2))
plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Class",
nested_merged_label = "<tax>",
legend_title = "Phylum and Class",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = element_line("black"),
panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=guide_legend(ncol=2))
# Make our nested dataframe for plotting
# Here you can set the top and bottom levels of the nesting along with the #s of each
# So, we are taking the top 6 phyla and from each the top 4 classes.
# e.g. Proteobacteria | Alpha, Delta, Gamma, Beta
# For cases where only 1 class for a phyla exists nested_merged_label argument will capture this
top_nested <- nested_top_taxa(phy_soil_only_vst,
top_tax_level = "Phylum",
nested_tax_level = "Class",
n_top_taxa = 10,
n_nested_taxa = 3)
ylabels <- c('madera'='Madera', 'merced' = 'Merced', 'san joaquin' = "San Joaquin")
# plot with a facet by Drought (D) or Well-Watered (W) plants
plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Class",
nested_merged_label = "<tax>",
legend_title = "Phylum and Class",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
# mostly changes made to fit the pubr theme without breaking legend text formatting from fantaxtic
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = element_line("black"),
panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=guide_legend(ncol=2))
# Make our nested dataframe for plotting
# Here you can set the top and bottom levels of the nesting along with the #s of each
# So, we are taking the top 6 phyla and from each the top 4 classes.
# e.g. Proteobacteria | Alpha, Delta, Gamma, Beta
# For cases where only 1 class for a phyla exists nested_merged_label argument will capture this
top_nested <- nested_top_taxa(phy_soil_only_vst,
top_tax_level = "Phylum",
nested_tax_level = "Family",
n_top_taxa = 10,
n_nested_taxa = 3)
ylabels <- c('madera'='Madera', 'merced' = 'Merced', 'san joaquin' = "San Joaquin")
# plot with a facet by Drought (D) or Well-Watered (W) plants
plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Class",
nested_merged_label = "<tax>",
legend_title = "Phylum and Class",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
# mostly changes made to fit the pubr theme without breaking legend text formatting from fantaxtic
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = element_line("black"),
panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=guide_legend(ncol=2))
top_nested
# plot with a facet by Drought (D) or Well-Watered (W) plants
plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Family",
nested_merged_label = "<tax>",
legend_title = "Phylum and Family",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
# mostly changes made to fit the pubr theme without breaking legend text formatting from fantaxtic
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = element_line("black"),
panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=guide_legend(ncol=2))
# plot with a facet by Drought (D) or Well-Watered (W) plants
plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Family",
legend_title = "Phylum and Family",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
# mostly changes made to fit the pubr theme without breaking legend text formatting from fantaxtic
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = element_line("black"),
panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=guide_legend(ncol=2))
top_nested
top_nested
# Make our nested dataframe for plotting
# Here you can set the top and bottom levels of the nesting along with the #s of each
# So, we are taking the top 6 phyla and from each the top 4 classes.
# e.g. Proteobacteria | Alpha, Delta, Gamma, Beta
# For cases where only 1 class for a phyla exists nested_merged_label argument will capture this
top_nested <- nested_top_taxa(phy_soil_only_vst,
top_tax_level = "Phylum",
nested_tax_level = "Class",
n_top_taxa = 10,
n_nested_taxa = 3)
ylabels <- c('madera'='Madera', 'merced' = 'Merced', 'san joaquin' = "San Joaquin")
# plot with a facet by Drought (D) or Well-Watered (W) plants
plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Class",
legend_title = "Phylum and Class",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
# mostly changes made to fit the pubr theme without breaking legend text formatting from fantaxtic
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = element_line("black"),
panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=guide_legend(ncol=2))
# Nest plot with facet between sites
panel_C_nested <- plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Class",
legend_title = "Phylum and Class",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
# mostly changes made to fit the pubr theme without breaking legend text formatting from fantaxtic
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = element_line("black"),
panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=guide_legend(ncol=2))
# Figure 2 panel D
# PCoA W/ only soil samples
# Calculate bray-curtis
out.bray <- ordinate(phy_soil_only_vst, method = "MDS", distance = "bray")
# Calculate distance matrixes for use in Vegan
out.dist.bray <- phyloseq::distance(phy_soil_only_vst, method = "bray")
# get variance explained by axes 1-3
sum(out.bray$values$Eigenvalues[1:3])/sum(out.bray$values$Eigenvalues) #43%
# Plot PCoAs 1x2-3 for bray by site
Panel_D <- PLOT_PCoA(phy_soil_only_vst, out.bray, 1, 2, split_by = 'site')
# load dataset generated from Data_filtering_normalization.R
phy_soil_vst <- readRDS("../../Data_files/phyloseq_16s_filtered_vst_dataset.rds")
phy_soil_only_vst <- subset_samples(phy_soil_vst, plant_body_site=="soil")
# Figure 2 panel A
Full_df <- readRDS("dataframe_for_analysis.RDS")
Full_df$Year <-c("2018", "2018", "2018", "2018", "2018", "2018", "2018", "2018", "2018", "2018", "2018", "2019", "2019", "2019", "2019", "2019", "2019", "2019", "2019", "2019", "2019", "2019", "2019", "2019", "2019")
#Rename the rownames to first column called Sample
setDT(Full_df, keep.rownames = "Sample")
# Make the data long form for GGplot
Full_df_long <- reshape2::melt(Full_df)
Full_df_long$Site <- as.factor(Full_df_long$Site)
Full_df_long$Site <- recode_factor(Full_df_long$Site, Ripperdan = "Madera", Livingston ="Merced", Liberty = "San Joaquin")
# Generate plot for means of sand/silt/clay by site irrespective of year.
# Generate means
x1 <- aggregate(Clay ~ Site, Full_df, mean)
x2 <- aggregate(Silt ~ Site, Full_df, mean)
x3 <- aggregate(Sand ~ Site, Full_df, mean)
# Create the dataframe
Site_means <- as.data.table(cbind(x1, Silt=x2$Silt, Sand=x3$Sand))
Site_means$Site <- c("San Joaquin", "Merced", "Madera")
# Make the data long form for GGplot2
Site_means_long <- melt(Site_means)
# PLOT
Panel_A_stacked <- ggplot(Site_means_long, aes(fill=variable, y=value, x=Site)) +
geom_bar(position="fill", stat="identity", color = "black") +
theme(legend.title = element_blank(), legend.position = "right") +
ylab("Proportion") +
xlab(element_blank())
Panel_A <- ggplot(Full_df_long, aes(fill=variable, y=value, x=Sample)) +
geom_bar(position="fill", stat="identity", color = "black") +
theme(legend.title = element_blank(), legend.position = "right") +
ylab("Proportion") +
xlab(element_blank()) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
facet_grid(~Site, scales = "free")  +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right')
# Figure 2 panel B
Ark <- as.data.frame(read_tsv("Soil_elements.tsv", col_names = TRUE))
# Remove Mount Vernon samples
Ark_CA <- Ark[10:37,]
# PCAs With Mt Vernon DDPSC ionomics
d <- Ark_CA %>% dplyr::select(pH:B)
rownames(d) <- Ark_CA$sample
d <- as.data.frame(scale(d, scale=T, center=T))
x <- apply(d, 2, is_gt, object=Ark_CA, threshold=5)
outliers <- unique(unlist(x))
data_clean <- Ark_CA[!(Ark_CA$sample %in% outliers),]
d_clean <- data_clean %>% dplyr::select(pH:B)
d_cleanScale <- scale(d_clean, scale=T, center=T)
pca <- prcomp(d_cleanScale)
x <- summary(pca)
# PLOT
Panel_B <- fviz_pca_biplot(pca, repel = TRUE, geom = "point", fill.ind = Ark_CA$Site, pointshape = 21, pointsize = 5, alpha.ind = 0.8, col.var = "black",
label = "var", palette = site_palette,invisible = "quali", title = NULL) +
labs(color = "Site", fill = "Site") + xlab("PC1 (52.6%)") + ylab("PC2 (13.8%)")
# Figure 2 panel C
# Get data from phyloseq object.
phylum_lvl <- tax_glom(phy_soil_only_vst, taxrank = "Phylum") # 42 taxa
# Make relative abundance AKA transform sample counts by diving by the ASV total.
phylum_lvl <- transform_sample_counts(phylum_lvl, function(x) x/sum(x))
# Take only the n number of taxa per taxonomic rank based on relative abundance.
# Taxa >n will be added to a other label.
phylum_lvl <- fantaxtic::get_top_taxa(physeq_obj = phylum_lvl, n = 10, relative = TRUE, discard_other = FALSE, other_label = "Other")
# Melt data frame with phyloseq function for plotting.
phylum_lvl <- psmelt(phylum_lvl)
# Reorder levels to put other to the end, other in alphabetical
phylum_lvl$Phylum <- forcats::fct_relevel(as.factor(phylum_lvl$Phylum), "Other", after = Inf)
summary(phylum_lvl$Phylum)
# PLOT
levels(phylum_lvl$lower_political) <- c("Madera", "Merced", "San Joaquin")
Panel_C <- ggplot(phylum_lvl, aes(x=Sample, y=Abundance, fill = Phylum)) +
geom_bar(position="fill", stat = "identity") +
ylab("Relative abundance") +
facet_grid(~lower_political, scale = "free") +
scale_fill_manual(values=safe_colorblind_palette)  +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right')
# Stacked barplot
summary(phy_soil_only_vst@sam_data)
# madera 8, merced 8, san joaquin 12
site_phylum <- phylum_lvl
site_phylum[site_phylum$lower_political == "Madera",]$Abundance <- site_phylum[site_phylum$lower_political == "Madera",]$Abundance / 8
site_phylum[site_phylum$lower_political == "Merced",]$Abundance <- site_phylum[site_phylum$lower_political == "Merced",]$Abundance / 8
site_phylum[site_phylum$lower_political == "San Joaquin",]$Abundance <- site_phylum[site_phylum$lower_political == "San Joaquin",]$Abundance / 12
#PLOT
Panel_C_stacked <- ggplot(site_phylum, aes(x=lower_political, y=Abundance, fill=Phylum)) +
geom_bar(stat="identity") +
scale_fill_manual(values=safe_colorblind_palette) +
theme(legend.text.align = 0) +
theme(legend.position = 'right')
# Figure 2C nested phylum and class
# Make Nested dataframe for plotting
top_nested <- nested_top_taxa(phy_soil_only_vst,
top_tax_level = "Phylum",
nested_tax_level = "Class",
n_top_taxa = 10,
n_nested_taxa = 3)
# Facet labels capitalized for consistancy
ylabels <- c('madera'='Madera', 'merced' = 'Merced', 'san joaquin' = "San Joaquin")
# Nest plot with facet between sites
panel_C_nested <- plot_nested_bar(top_nested$ps_obj,
top_level = "Phylum",
nested_level = "Class",
legend_title = "Phylum and Class",
palette = safe_colorblind_palette) +
labs(y = "Relative Abuance") +
facet_wrap(~lower_political, scales = "free_x", labeller = as_labeller(ylabels)) +
# mostly changes made to fit the pubr theme without breaking legend text formatting from fantaxtic
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"), legend.key.size = unit(10, "points"),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = 'right',
strip.background = element_rect(fill = "#F2F2F2", colour = "black", size = 0.7),
axis.line = element_line(colour = "black", size = 0.5),
axis.text = element_text(color = "black"),
strip.text = element_text(colour = 'black'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = element_line("black"),
panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=guide_legend(ncol=2))
# Figure 2 panel D
# PCoA W/ only soil samples
# Calculate bray-curtis
out.bray <- ordinate(phy_soil_only_vst, method = "MDS", distance = "bray")
# Calculate distance matrixes for use in Vegan
out.dist.bray <- phyloseq::distance(phy_soil_only_vst, method = "bray")
# get variance explained by axes 1-3
sum(out.bray$values$Eigenvalues[1:3])/sum(out.bray$values$Eigenvalues) #43%
# Plot PCoAs 1x2-3 for bray by site
Panel_D <- PLOT_PCoA(phy_soil_only_vst, out.bray, 1, 2, split_by = 'site')
# Assembled plot
#ggarrange(Panel_A, Panel_B, Panel_C, Panel_D, labels = "AUTO") # This doesnt work to align the plots
FigureX_multipanel <- (Panel_A | Panel_B) / (Panel_C | Panel_D) + plot_annotation(tag_levels = 'A')
# Assembled plot
#ggarrange(Panel_A, Panel_B, Panel_C, Panel_D, labels = "AUTO") # This doesnt work to align the plots
FigureX_multipanel <- (Panel_A | Panel_B) / (panel_C_nested | Panel_D) + plot_annotation(tag_levels = 'A')
FigureX_multipanel
ggsave("Figure_2_soil.svg", FigureX_multipanel, dpi = 600, width = 16, height = 10)
ggsave("Figure_2_soil.svg", FigureX_multipanel, width = 6.6, height = 4.5)
# Linear modeling
# Soil texture
# lms for % sand silt clay
silt_model <- lm(Silt ~ Site + Year, Full_df)
sand_model <- lm(Sand ~ Site + Year, Full_df)
clay_model <- lm(Clay ~ Site + Year, Full_df)
# anova
Anova(silt_model, type = "II")
Anova(sand_model, type = "II")
Anova(clay_model, type = "II")
# posthocs
as.data.frame(pairs(emmeans(clay_model, ~Site)))
summarySE(Full_df, measurevar = 'Clay', groupvars = 'Site' )
# Soil elemental composition
Soil_ele_lm.df <- cbind(as.data.frame(pca$x), Ark_CA)
# lms
Soil_ele_pc1_model <- lm(PC1 ~ Site + Year, Soil_ele_lm.df)
Soil_ele_pc2_model <- lm(PC2 ~ Site + Year, Soil_ele_lm.df)
# anova
Anova(Soil_ele_pc1_model, type = "II")
Anova(Soil_ele_pc2_model, type = "II")
# posthocs
as.data.frame(pairs(emmeans(Soil_ele_pc1_model, ~Site)))
# Alpha diversity
Alpha_div_metrics <- function(phyloseq_obj){
SH <- as.data.frame(vegan::diversity(t(otu_table(phyloseq_obj)), index="shannon"))
IS <- as.data.frame(vegan::diversity(t(otu_table(phyloseq_obj)), index="invsimpson"))
CH <- as.data.frame(t(estimateR(round(t(otu_table(phyloseq_obj))))))
CH <- as.data.frame(CH$S.chao1)
alpha_div <- cbind(SH, IS, CH)
colnames(alpha_div) <-c("Shannon", "Invsimpson", "Chao1")
R <- picante::pd(samp = t(otu_table(phyloseq_obj)), tree = phy_tree(phyloseq_obj), include.root = TRUE)
alpha_div <- cbind(alpha_div, "Faithpd" = R$PD, as.data.frame(phyloseq_obj@sam_data))
return(alpha_div)
}
Alpha_soil.df <- Alpha_div_metrics(phy_soil_only_vst)
# lms
Alpha_soil_faith_model <- lm(Faithpd ~ lower_political + year, Alpha_soil.df)
Alpha_soil_chao1_model <- lm(Chao1 ~ lower_political + year, Alpha_soil.df)
# anova
Anova(Alpha_soil_faith_model, type = "II")
Anova(Alpha_soil_chao1_model, type = "II")
# posthocs
as.data.frame(pairs(emmeans(Alpha_soil_faith_model, ~ year)))
as.data.frame(pairs(emmeans(Alpha_soil_chao1_model, ~ year)))
# beta diversity
### Adonis2 ###
# Create sample data dataframe from phyloseq object to use in vegan/adonis
phy_vst_soil_only_metadata <- pssd2veg(phy_soil_only_vst)
adonis2(out.dist.bray ~ site + year, data = phy_vst_soil_only_metadata, by = "margin", permutations = 1000)
